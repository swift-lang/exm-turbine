
# BASH-formatted setup script processed by turbine/configure
#
# Influential environment variables include:
# TURBINE_USER_LIB - directory for user library code
# TURBINE_STATIC_EXEC - if true, try to use statically linked executable

TURBINE_HOME=@prefix@
TURBINE_VERSION=@TURBINE_VERSION@
export C_UTILS=@USE_C_UTILS@
export TCL=@USE_TCL@
export TCLSH=@USE_TCLSH@
export ADLB=@USE_ADLB@

export MPI_IMPL=@MPI_IMPL@
# Only one of the following is used
export MPI=@USE_MPI@
export MPI_LIB=@USE_MPI_LIB_DIR@
export TURBINE_LAUNCHER=@USE_LAUNCHER@

export TURBINE_EXEC=${TURBINE_HOME}/bin/turbine_exec.x

TCLLIBPATH=
if [[ -n ${TURBINE_USER_LIB:-} ]] ; then
  TCLLIBPATH="${TURBINE_USER_LIB} "
fi

if (( TURBINE_STATIC_EXEC ))
then
  # Use statically linked executable and package
  TCL_RUN=${TURBINE_EXEC}
  TCLLIBPATH+="${TURBINE_HOME}/libstatic"
else
  # Use regular tclsh plus Turbine Tcl package
  if [[ ${TCLSH} == "" ]]
  then
    echo "Could not find tclsh!"
    return 1
  fi
  TCL_RUN=${TCLSH}
  TCLLIBPATH+="${TURBINE_HOME}/lib"
fi

export TCLLIBPATH


export TURBINE_MACHINE=@USE_MACHINE@

if [[ ${TURBINE_MACHINE} == "sicortex" ]]
then
  # Fast string functions for the SiCortex
  # Turbine will not run without this
  export LD_PRELOAD=/usr/lib64/libscstr.so
  # For some reason, the SiCortex cannot find this in rpath
  export LD_LIBRARY_PATH=${TURBINE_HOME}/lib:${LD_LIBRARY_PATH}
fi

return 0
