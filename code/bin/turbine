#!/bin/bash
# Copyright 2013 University of Chicago and Argonne National Laboratory
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License

# Turbine wrapper script

# Sets Turbine location, obtains configuration, launches

# For usage: turbine -h

# Set TURBINE_LAUNCH_OPTS to pass additional arguments to mpiexec

# Defaults:
# Number of processes
PROCS=3
# Use MPI rank line prefixing?
LINE_PREFIX_ENABLED=0
LINE_PREFIX=
# MPI machine file
MACHINE_FILE=0
REPORT_VERSION=0
VERBOSE=0

while getopts "f:hln:vV" opt
do
  case $opt in
    f)
      MACHINE_FILE=${OPTARG}
      ;;
    h)
      PRINT_HELP=1
      ;;
    l)
      LINE_PREFIX_ENABLED=1
      ;;
    n)
      PROCS=${OPTARG}
      ;;
    v)
      REPORT_VERSION=1
      ;;
    V)
      VERBOSE=1
      ;;
    \?)
      echo "turbine: unknown option: ${OPTARG}"
      exit 1
      ;;
  esac
done

if (( VERBOSE ))
then
  set -x
fi

TURBINE_BIN=$( dirname $0 )
if [[ -z ${TURBINE_HOME} ]]
then
  TURBINE_HOME=$( cd ${TURBINE_BIN}/.. ; /bin/pwd )
fi

# Load Turbine configuration settings
source ${TURBINE_HOME}/scripts/turbine-config.sh

report_version()
{
  echo "Turbine ${TURBINE_VERSION}"
  echo " in: ${TURBINE_HOME}"
}

if (( REPORT_VERSION ))
then
  report_version
  exit 0
fi

print_help()
{
  cat ${TURBINE_HOME}/etc/help.txt
}

if (( PRINT_HELP ))
then
  echo
  report_version
  echo
  print_help
  exit 0
fi

if [[ ${MACHINE_FILE} != 0 ]]
then
  TURBINE_LAUNCH_OPTS="-f ${MACHINE_FILE}"
fi

shift $(( OPTIND-1 ))
PROGRAM=$1
shift
ARGS=${*}

if [[ ${PROGRAM} == "" ]]
then
  echo "turbine: no program!"
  exit 1
fi
if [[ ! -f ${PROGRAM} ]]
then
  echo "turbine: program not found: ${PROGRAM}"
  exit 1
fi

if [[ ${?} != 0 ]]
then
  echo "turbine: configuration error!"
  exit 1
fi

if (( ${LINE_PREFIX_ENABLED} ))
then
  if [[ ${MPI_IMPL} == "MPICH2" ]]
  then
    LINE_PREFIX="-l"
  elif [[ ${MPI_IMPL} == OpenMPI1.[3-5] ]]
  then
    LINE_PREFIX="-tag-output"
  fi
fi

OPTS=
OPTS+="${LINE_PREFIX} "
OPTS+="-n ${PROCS} "
OPTS+=${TURBINE_LAUNCH_OPTS}

if (( VERBOSE ))
then
  which ${TURBINE_LAUNCH}
fi

# Allow user to insert valgrind
${TURBINE_LAUNCH} ${OPTS} ${VALGRIND} ${TCLSH} ${PROGRAM} ${ARGS}
# Exit code returned by shell script
