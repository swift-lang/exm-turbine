
# Valgrind memcheck suppressions file
# To use: set
#   VALGRIND='valgrind --suppressions=turbine.supp --num-callers=$N'
# Set N high for MPICH errors- these have deep call stacks

# Put these in your .valgrindrc:
# -q
# --memcheck:leak-check=yes
# --memcheck:track-origins=yes
# --show-reachable=yes

# Other tips:
# http://wiki.tcl.tk/3840
# http://wiki.tcl.tk/3248

# Use: export LANG=POSIX - helps a little
#      Tcl -DPURIFY - did not help
# Configure MPICH with --enable-g=dbg,meminit
#       meminit prevents uninitialized data warnings

{
  tcl-alloc-1
  Memcheck:Leak
  fun:malloc
  fun:Tcl_Alloc
  ...
}

{
  tcl-alloc-2
  Memcheck:Leak
  fun:malloc
  fun:TclpAlloc
  ...
}

{
  tcl-alloc-3
  Memcheck:Leak
  fun:malloc
  fun:GetBlocks
  fun:TclpAlloc
  ...
}

{ 
  tcl-thread-alloc-1
  fun:malloc
  fun:TclThreadAllocObj 
  ...
}

{
  tcl-realloc-1
  Memcheck:Leak
  fun:realloc
  fun:TclpRealloc
  ...
}

{
  tcl-pwuid-1
  Memcheck:Leak
  fun:malloc
  ...
  fun:TclpGetPwUid
  ...
}

{
  tcl-allocatefreeobjects
  Memcheck:Leak
  fun:malloc
  fun:Tcl_Alloc
  fun:TclAllocateFreeObjects
}

{
  mpi-init-calloc
  Memcheck:Leak
  fun:calloc
  ...
  fun:PMPI_Init
}

{
  mpi-vcrt
  Memcheck:Leak
  fun:malloc
  fun:MPID_VCRT_Create
}

# The following Param suppressions are unnecessary when using
#     MPICH's meminit...

{
  mpi-send
  Memcheck:Param
  writev(vector[...])
  fun:writev
  fun:MPID_nem_tcp_iStartContigMsg
  ...
  fun:PMPI_Send
}

{
  mpi-barrier-send
  Memcheck:Param
  writev(vector[...])
  fun:writev
  fun:MPID_nem_tcp_iSendContig
  ...
  fun:PMPI_Barrier
}

{
  mpi-comm-dup-send
  Memcheck:Param
  writev(vector[...])
  fun:writev
  ...
  fun:PMPI_Comm_dup
}

{
  mpi-comm-split-send
  Memcheck:Param
  writev(vector[...])
  fun:writev
  ...
  fun:PMPI_Comm_split
}

{
  mpi-allgather-send
  Memcheck:Param
  writev(vector[...])
  fun:writev
  fun:MPID_nem_tcp_iSendContig
  ...
  fun:PMPI_Allgather
}

{
  mpi-finalize-send
  Memcheck:Param
  writev(vector[...])
  fun:writev
  fun:MPID_nem_tcp_iStartContigMsg
  ...
  fun:PMPI_Finalize
  ...
}

# Local Variables:
# mode: sh-mode
# sh-basic-offset: 2
# End:
